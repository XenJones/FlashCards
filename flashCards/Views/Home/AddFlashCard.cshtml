@model FlashcardPack
@{
    var existingFlashcards = Model?.Flashcards?.ToList() ?? new List<Flashcard>();
}
<h2>@ViewData["Title"]</h2>
<form asp-action="@ViewData["Action"]" method="post">
    <input type="hidden" asp-for="Id" />

    <!-- Pack Name Section -->
    <div class="form-group mb-3">
        <label asp-for="PackName" class="form-label">Pack Name</label>
        <input asp-for="PackName" class="form-control" required />
        <div class="invalid-feedback">Pack name is required</div>
        <div class="text-danger">@TempData["Error"]</div>
    </div>

    <hr />

    <h3>Flash Cards</h3>
    <div class="container">
        <div class="row" id="flashcards-container">
            @for (var i = 0; i < Math.Max(1, existingFlashcards.Count); i++)
            {
                var flashcard = i < existingFlashcards.Count ? existingFlashcards[i] : new Flashcard();
                <div class="col-md-4 mb-4">
                    <div class="card shadow-sm">
                        <img style="max-height: 200px; object-fit:contain;" class="card-img-top"
                             id="flashcardImg@(i)" src="@flashcard.ImageURL" alt="Flashcard Image for Question @(i + 1)">
                        <div class="card-body">
                            <div class="form-group mb-3">
                                <label>Image URL</label>
                                <input name="Flashcards[@i].ImageURL" class="form-control" required
                                       onchange="updateImage(@i)" value="@flashcard.ImageURL" />
                                <div class="invalid-feedback">Image URL is required</div>
                            </div>
                            <hr />
                            <div class="form-group mb-3">
                                <label>Question</label>
                                <input name="Flashcards[@i].Question" class="form-control" required
                                       value="@flashcard.Question" />
                                <div class="invalid-feedback">Question is required</div>
                            </div>
                            <div class="form-group">
                                <label>Sub Question</label>
                                <input name="Flashcards[@i].SubQuestion" class="form-control"
                                       value="@flashcard.SubQuestion" />
                            </div>
                            <div class="form-group">
                                <label>Answer</label>
                                <input name="Flashcards[@i].Answer" class="form-control"
                                       value="@flashcard.Answer" />
                            </div>
                            <button type="button" class="btn btn-danger btn-sm"
                                    onclick="deleteFlashcard(this)">
                                Delete
                            </button>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>

    <div class="mb-3">
        <label for="flashcard-count" class="form-label">Number of Flashcards to Add</label>
        <input type="number" id="flashcard-count" class="form-control" value="1" min="1" max="500" />
    </div>

    <button type="button" class="btn btn-secondary" id="add-flashcard-btn">Add Flashcard</button>
    <hr />
    <button type="submit" class="btn btn-primary">@ViewData["ButtonText"]</button>
</form>

@section Scripts {
    <script>
        (function () {
            'use strict';
            var forms = document.querySelectorAll('form');

            Array.prototype.slice.call(forms).forEach(function (form) {
                form.addEventListener('input', function (event) {
                    if (event.target.checkValidity()) {
                        event.target.classList.remove('is-invalid');
                        event.target.classList.add('is-valid');
                    } else {
                        event.target.classList.remove('is-valid');
                        event.target.classList.add('is-invalid');
                    }
                }, false);
            });
        })();

        function updateImage(index) {
            const imageUrl = document.querySelector(`input[name='Flashcards[${index}].ImageURL']`).value;
            const imgElement = document.getElementById(`flashcardImg${index}`);
            imgElement.src = imageUrl;
        }

        function deleteFlashcard(button) {
            const card = button.closest('.col-md-4');
            card.remove();
        }

        let flashcardIndex = @Math.Max(1, existingFlashcards.Count);  // Start from existing count
        document.getElementById("add-flashcard-btn").addEventListener("click", function () {
            const container = document.getElementById("flashcards-container");
            const count = parseInt(document.getElementById("flashcard-count").value) || 1;

            const currentFlashcardCount = container.querySelectorAll('.col-md-4').length;

            if (currentFlashcardCount + count > 501) {
                alert('You cannot add more than 500 flashcards.');
                return;
            }

            for (let i = 0; i < count; i++) {
                const newFlashcard = `
                            <div class="col-md-4 mb-4">
                                <div class="card shadow-sm">
                                    <img style="max-height: 200px; object-fit:contain;"
                                         class="card-img-top"
                                         id="flashcardImg${flashcardIndex}"
                                         src="..."
                                         alt="Flashcard Image for Question ${flashcardIndex + 1}">
                                    <div class="card-body">
                                        <div class="form-group mb-3">
                                            <label>Image URL</label>
                                            <input name="Flashcards[${flashcardIndex}].ImageURL"
                                                   class="form-control"
                                                   required
                                                   onchange="updateImage(${flashcardIndex})" />
                                            <div class="invalid-feedback">Image URL is required</div>
                                        </div>
                                        <hr />
                                        <div class="form-group mb-3">
                                            <label>Question</label>
                                            <input name="Flashcards[${flashcardIndex}].Question"
                                                   class="form-control"
                                                   required />
                                            <div class="invalid-feedback">Question is required</div>
                                        </div>
                                        <div class="form-group">
                                            <label>Sub Question</label>
                                            <input name="Flashcards[${flashcardIndex}].SubQuestion"
                                                   class="form-control" />
                                        </div>
                                        <div class="form-group">
                                            <label>Answer</label>
                                            <input name="Flashcards[${flashcardIndex}].Answer"
                                                   class="form-control" />
                                        </div>
                                        <button type="button"
                                                class="btn btn-danger btn-sm"
                                                onclick="deleteFlashcard(this)">Delete</button>
                                    </div>
                                </div>
                            </div>
                        `;

                container.insertAdjacentHTML("beforeend", newFlashcard);
                flashcardIndex++;
            }
        });
    </script>
}